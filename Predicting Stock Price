#This program predicts the prices of stocks

#Dependencies
import quandl
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR
from sklearn.model_selection import train_test_split

#Obtaining Data
df = quandl.get("WIKI/FB")
#print(df.head())

#Obtaining Adjusted Close Price
df = df[['Adj. Close']]
#print(df.head())

#Predicting the price in the future
forecast_out=1
#Creating Target Column
df['Prediction']=df[['Adj. Close']].shift(-1)
#print(df.head())

#Creating an independent Dataset
X=np.array(df.drop(['Prediction'],1))
#Removing the last 'n' rows
X=X[:-forecast_out]
#print(X)

#Creating dependent dataset
Y=np.array(df['Prediction'])
#Getting all Y values except last n rows
Y=Y[:-forecast_out]
#print(Y)

#Splitting the data into 80% training and 20% testing
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2)

#Creating and Training the Support Vector Machine (Regressor)
svr_rbf = SVR(kernel='rbf', C=1e3, gamma=0.1)
svr_rbf.fit(x_train, y_train)

#Testing the model
#Score resturns the coefficient of determination R^2 of the Prediction
#Best score is 1.0
svm_confidence = svr_rbf.score(x_test, y_test)
print ("SVM confidence:", svm_confidence)
#SVM confidence: 0.9986877223816317
